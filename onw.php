<?php
/**
 * Created by PhpStorm.
 * User: black
 * Date: 2019-02-25
 * Time: 12:57
 */

//单列模式
final class Mysql
{
    private static $instance;

    private function __construct()
    {

    }

    public function getInstance()
    {
        if (!self::$instance instanceof self) {
            self::$instance = new self();
        } else {
            return self::$instance;
        }
    }

    private function __clone()
    {
        trigger_error("can not allowed");
    }
}

//工厂模式
interface SystemFactor
{
    public function createSystem($type);
}

class MySystemFactor implements SystemFactor
{
    public function createSystem($type)
    {
        // TODO: Implement createSystem() method.
    }
}


interface  Component
{
    public function operation();
}

abstract class Decorator implements Component //装饰者
{

    protected $_component;

    public function __construct(Component $component)
    {
        $this->_component = $component;
    }

    public  function operation()
    {
        $this->_component->operation();
    }
}

class ConcreteDecoratorA extends Decorator{ //具体装饰类
    public function __construct(Component $component)
    {
        parent::__construct($component);
    }

    public function operation()
    {
        parent::operation(); // TODO: Change the autogenerated stub
        $this->add();
    }

    public function add(){
        echo 1;
    }
}

class ConcreteComponent implements Component{ //具体组件类
    public function operation() {}
}